apply plugin: 'com.android.application'
apply plugin: 'androidsvgdrawable'

configurations {
    all*.exclude group: 'org.json', module: 'json'
    all*.exclude group: 'net.sf.kxml', module: 'kxml2'
    all*.exclude group: 'androidx.legacy', module: 'legacy-support-core-ui'
    all*.exclude group: 'androidx.lifecycle', module: 'lifecycle-runtime'
}

dependencies {
    implementation project(':public-transport-enabler')
    implementation 'de.schildbach.wallet:integration-android:2.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.0.0'
    implementation 'androidx.drawerlayout:drawerlayout:1.0.0'
    implementation 'androidx.core:core:1.1.0'
    implementation 'com.squareup.okhttp3:okhttp:3.12.3'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.3'
    implementation 'com.google.guava:guava:28.1-android'
    implementation 'org.osmdroid:osmdroid-android:6.1.0'
    implementation 'org.slf4j:slf4j-api:1.7.28'
    implementation 'com.github.tony19:logback-android:2.0.0'
    testImplementation 'junit:junit:4.12'
}

android {
    compileSdkVersion 'android-29'
    buildToolsVersion '29.0.2'

    lintOptions {
        abortOnError false
        disable 'MissingTranslation'
    }

    defaultConfig {
        generatedDensities = ['hdpi', 'xhdpi']
    }

    buildTypes {
        all {
            minifyEnabled true
            shrinkResources true
            crunchPngs false
            proguardFile 'proguard.cfg'
        }
        debug {
            debuggable true
        }
    }

    flavorDimensions 'flavor'
    productFlavors {
        aosp {
            dimension 'flavor'
            versionNameSuffix '-aosp'
        }
        google {
            dimension 'flavor'
            versionNameSuffix '-google'
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
        test {
            java.srcDirs = ['test']
        }
        aosp {
            java.srcDirs = ['src-aosp']
        }
        google {
            java.srcDirs = ['src-google']
        }
    }

    packagingOptions {
        exclude 'META-INF/*.version'
        exclude 'META-INF/proguard/**'
        exclude 'okhttp3/internal/publicsuffix/publicsuffixes.gz'
    }
}

task svgToPng(type: fr.avianey.androidsvgdrawable.gradle.SvgDrawableTask) {
    from = files('graphics')
    to = file('res')
    targetedDensities = ['hdpi', 'xhdpi', 'xxhdpi', 'xxxhdpi']
    outputFormat = 'PNG'
    outputType = 'mipmap'
}
